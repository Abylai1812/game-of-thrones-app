{"version":3,"sources":["components/header/header.js","components/header/index.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/error.jpg","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/itemList.js","components/itemList/index.js","components/itemDetails/itemDetails.js","components/itemDetails/index.js","components/rowBlock/index.js","components/rowBlock/rowBlock.js","components/pages/characterPage.js","components/pages/booksPage.js","components/pages/housesPage.js","components/pages/booksItem.js","components/app/app.js","components/app/index.js","index.js"],"names":["HeaderBlock","styled","div","HeaderTitle","HeaderLinks","ul","Header","to","GotService","getResource","url","a","fetch","_apiBase","res","ok","Error","status","json","getAllCharacters","map","_transformCharacter","getCharacter","id","character","getAllHouses","_transformHouse","getHouse","house","getAllBooks","_transformBook","getBook","book","_extractId","item","match","char","name","isSet","gender","born","died","culture","region","words","titles","overlord","ancestralWeapons","numberOfPages","publisher","released","this","data","Spinner","class","ErrorMessage","src","img","alt","RandomChar","gotService","state","loading","error","onCharLoaded","setState","onError","err","updateChar","Math","floor","random","then","catch","timerId","setInterval","clearInterval","errorMessage","spinner","content","className","Component","View","ItemList","itemList","getData","props","arr","label","renderItem","onClick","onItemSelected","items","renderItems","Field","field","ItemDetails","onItemDetailsLoaded","updateItem","prevProps","itemId","React","Children","children","child","cloneElement","errorMesssage","showItem","RowBlock","left","right","md","CharacterPage","selectedChar","itemDetails","BooksPage","history","push","withRouter","HousesPage","selectedHouse","BooksItem","bookId","App","showRandomChar","toggleRandomChar","lg","size","offset","path","component","exact","render","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8f6d72e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst HeaderBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 80px;\r\n`;\r\n\r\nconst HeaderTitle = styled.div`\r\n    font-size: 24px;\r\n    color: #fff;\r\n    margin: 0;\r\n`;\r\n\r\nconst HeaderLinks = styled.ul`\r\n    display: flex;\r\n    margin: 0;\r\n    align-items: center;\r\n    color: #fff;\r\n    list-style-type: none;\r\n    li {\r\n        margin-right: 20px;\r\n        font-size: 18px;        \r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderBlock>\r\n            <HeaderTitle>\r\n                <Link to='/'>\r\n                    Game of Thrones DB\r\n                </Link>\r\n            </HeaderTitle>\r\n            <HeaderLinks>\r\n                <li>\r\n                    <Link to ='/characters/'>Characters</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to ='/houses/'>Houses</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to ='/books/'>Books</Link>\r\n                </li>\r\n            </HeaderLinks>\r\n        </HeaderBlock>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","import Header from './header';\r\nexport default Header;","export default class GotService {\n\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\n    }\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async () => {\n        const res = await this.getResource('/characters?page=5&pageSize=10');\n        return res.map(this._transformCharacter);\n    }\n    \n    getCharacter = async (id) => {\n        const character = await this.getResource(`/characters/${id}`);\n        return this._transformCharacter(character);\n    }\n\n    getAllHouses = async () => {\n        const res = await this.getResource(`/houses/`);\n        return res.map(this._transformHouse);\n    }\n\n    getHouse = async (id) => {\n        const house = await this.getResource(`/houses/${id}`);\n        return this._transformHouse(house);\n    }\n\n    getAllBooks = async () => {\n        const res = await this.getResource(`/books/`);\n        return res.map(this._transformBook);\n    }\n\n    getBook = async (id) => {\n        const book = await this.getResource(`/books/${id}`);\n        return this._transformBook(book);\n    }\n\n    isSet(data) {\n        if (data) {\n            return data\n        } else {\n            return 'no data :('\n        }\n    }\n\n    _extractId = (item) => {\n        const idRegExp = /\\/([0-9]*)$/;\n        return item.url.match(idRegExp)[1];\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: this._extractId(char),\n            name: this.isSet(char.name),\n            gender: this.isSet(char.gender),\n            born: this.isSet(char.born),\n            died: this.isSet(char.died),\n            culture: this.isSet(char.culture)\n        };\n    }\n\n    _transformHouse = (house)=> {\n        return {\n            id: this._extractId(house),\n            name: this.isSet(house.name),\n            region: this.isSet(house.region),\n            words: this.isSet(house.words),\n            titles: this.isSet(house.titles),\n            overlord: this.isSet(house.overlord),\n            ancestralWeapons: this.isSet(house.ancestralWeapons)\n        };\n    }\n\n    _transformBook = (book) => {\n        return {\n            id: this._extractId(book),\n            name: this.isSet(book.name),\n            numberOfPages: this.isSet(book.numberOfPages),\n            publisher: this.isSet(book.publisher),\n            released: this.isSet(book.released)\n        };\n    }\n}\n","import Spinner from './spinner';\nexport default Spinner;","import React from 'react'; \nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div class=\"loadingio-spinner-ripple-api2nd2g9du\"><div class=\"ldio-kvg8xtg4j\">\n        <div></div><div></div>\n        </div></div>\n    )\n}\n\nexport default Spinner;\n","export default __webpack_public_path__ + \"static/media/error.4a53f279.jpg\";","import ErrorMessage from './errorMessage';\nexport default ErrorMessage;","import React from 'react';\nimport './errorMessage.css';\nimport img from './error.jpg';\nconst ErrorMessage = () => {\n    return (\n        <>\n            <img src={img} alt='error'></img>\n            <span>Something goes wrong</span>\n        </>\n    )\n}\n\nexport default ErrorMessage;","import React,{Component} from 'react';\r\nimport './randomChar.css';\r\nimport gotService from '../../services/gotService';\r\nimport Spinner from '../spinner';\r\nimport ErrorMessage from '../errorMessage';\r\n\r\nexport default class RandomChar extends Component {\r\n    \r\n    gotService = new gotService();\r\n    state = {\r\n        char:{},\r\n        loading:true,\r\n        error:false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n        this.timerId = setInterval(this.updateChar,15000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState ({\r\n            char,\r\n            loading:false\r\n        })\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true,\r\n            loading:false\r\n        })\r\n    }\r\n    \r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random()*140 + 25);\r\n        this.gotService.getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    render() {\r\n        const {char,loading,error} = this.state;\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ?  <View char={char}/> : null;  \r\n         \r\n        return (\r\n            <div className=\"random-block rounded\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst View = ({char}) => {\r\n    const {name,gender,born,died,culture} = char; \r\n    return (\r\n        <>\r\n        <h4>Random Character:{name}</h4>\r\n        <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item d-flex justify-content-between\">\r\n                <span className=\"term\">Gender</span>\r\n                <span>{gender}</span>\r\n            </li>\r\n            <li className=\"list-group-item d-flex justify-content-between\">\r\n                <span className=\"term\">Born</span>\r\n                <span>{born}</span>\r\n            </li>\r\n            <li className=\"list-group-item d-flex justify-content-between\">\r\n                <span className=\"term\">Died</span>\r\n                <span>{died}</span>\r\n            </li>\r\n            <li className=\"list-group-item d-flex justify-content-between\">\r\n                <span className=\"term\">Culture</span>\r\n                <span>{culture}</span>\r\n            </li>\r\n        </ul>\r\n        </>\r\n    )\r\n}","import RandomChar from './randomChar';\r\nexport default RandomChar;","import React, {Component} from \"react\";\r\nimport './itemList.css';\r\nimport Spinner from \"../spinner\";\r\nimport ErrorMessage from \"../errorMessage\";\r\n\r\nexport default class ItemList extends Component {\r\n\r\n    state = {\r\n        itemList:null,\r\n        error:false\r\n    }\r\n\r\n    componentDidMount() {        \r\n        const {getData} = this.props;\r\n\r\n        getData()\r\n        .then( (itemList) => {\r\n            this.setState ({\r\n                itemList,\r\n                error:false\r\n            });\r\n        })\r\n        .catch( () => {this.onError()})\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState ({\r\n            itemList: null,\r\n            error:true\r\n        })\r\n    }\r\n\r\n    onError = (status) => {\r\n        this.setState({\r\n            itemList:null,\r\n            error:true\r\n        })\r\n    }\r\n\r\n    renderItems(arr) {\r\n        return arr.map((item) => {\r\n            const {id} = item;\r\n            const label = this.props.renderItem(item)\r\n            return (\r\n                <li \r\n                    key={id}\r\n                    className=\"list-group-item\"\r\n                    onClick={ () => this.props.onItemSelected(id)}>\r\n                    {label}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {itemList,error} = this.state;\r\n\r\n        if(error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        if(!itemList) {\r\n            return (\r\n            <div className=\"char-details rounded\">\r\n                <Spinner/>\r\n            </div>\r\n            )\r\n        }\r\n\r\n        const items = this.renderItems(itemList);\r\n\r\n        return (\r\n            <ul className=\"item-list list-group\">\r\n              {items}\r\n            </ul>\r\n        );\r\n    }\r\n   \r\n}\r\n","import ItemList  from \"./itemList\";\r\nexport default ItemList;","import React, {Component} from 'react';\r\nimport './itemDetails.css';\r\nimport ErrorMessage from '../errorMessage';\r\nimport Spinner from '../spinner';\r\n\r\nconst Field = ({item,field,label}) => {\r\n    return (\r\n        <li className='list-group-item d-flex justify-content-between'>\r\n            <span className='term'>{label}</span>\r\n            <span>{item[field]}</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport {\r\n    Field\r\n};\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n    state = {\r\n        item:null,\r\n        loading:true,\r\n        error:false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItem();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.itemId !== prevProps.itemId) {\r\n            this.updateItem();\r\n        }\r\n    }\r\n\r\n    onItemDetailsLoaded = (item) => {\r\n        this.setState({\r\n            item,\r\n            loading:false\r\n        })\r\n    }\r\n\r\n    updateItem() {\r\n        const {itemId, getData} = this.props;\r\n        if(!itemId) {\r\n            return;\r\n        }\r\n    \r\n        this.setState({\r\n            loading:true\r\n        })\r\n\r\n        getData(itemId)\r\n            .then(this.onItemDetailsLoaded)\r\n            .catch( () => this.onError() )\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            item:null,\r\n            error:true\r\n        })\r\n    }\r\n\r\n    showItem(item) {\r\n        const {name} = item;\r\n        return (\r\n            <>\r\n            <h4>{name}</h4>\r\n            <ul className='list-group list-group-flush'>\r\n                {\r\n                    React.Children.map(this.props.children,(child) => {\r\n                        return React.cloneElement(child,{item})\r\n                    })\r\n                }\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const {item,loading,error} = this.state;\r\n        const errorMesssage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? \r\n            <div className='item-details rounded'>\r\n                <Spinner/>\r\n            </div> : null;\r\n        const content = !(loading || error) ? this.showItem(item): null;\r\n\r\n        if(!item) {\r\n            return (\r\n                <div className='item-details rounded'>\r\n                    <span className='select-error'>Please select a character</span>\r\n                </div>\r\n            ); \r\n        } else {\r\n            return (\r\n                <div className='item-details rounded'>\r\n                    {errorMesssage}\r\n                    {spinner}\r\n                    {content}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n   \r\n\r\n ","import ItemDetails, {Field} from './itemDetails';\r\nexport default ItemDetails;\r\nexport {\r\n    Field\r\n}","import RowBlock from \"./rowBlock\";\r\nexport default RowBlock;","import React from 'react';\r\nimport {Col,Row} from 'reactstrap';\r\n\r\nconst RowBlock = ({left,right}) => {\r\n    return (\r\n        <Row>\r\n            <Col md='6'>\r\n                {left}\r\n            </Col>\r\n            <Col md='6'>\r\n                {right}\r\n            </Col>\r\n        </Row>   \r\n    )\r\n}\r\n\r\nexport default RowBlock;","import React, {Component} from 'react';\r\nimport ItemList from '../itemList';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\nimport ErrorMessage from '../errorMessage';\r\nimport gotService from '../../services/gotService';\r\nimport RowBlock from '../rowBlock';\r\n\r\nexport default class CharacterPage extends Component {\r\n\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        selectedChar:null,\r\n        error:false\r\n    }\r\n    \r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error:true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        const itemList = (\r\n            <ItemList \r\n            onItemSelected={this.onItemSelected}\r\n            getData={this.gotService.getAllCharacters}\r\n            renderItem ={({name,gender}) => `${name} (${gender})`}/>\r\n        )\r\n\r\n        const itemDetails = (\r\n            <ItemDetails \r\n            itemId={this.state.selectedChar}\r\n            getData={this.gotService.getCharacter}> \r\n                <Field field='gender' label='Gender'/>\r\n                <Field field='born' label='Born'/>\r\n                <Field field='died' label='Died'/>\r\n                <Field field='cultue' label='Cultute'/>\r\n            </ItemDetails>\r\n        )\r\n        \r\n        return (\r\n            <RowBlock left = {itemList} right={itemDetails}/>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport ItemList from '../itemList';\r\nimport ErrorMessage from '../errorMessage';\r\nimport gotService from '../../services/gotService';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass BooksPage extends Component {\r\n\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        error:false\r\n    }\r\n    \r\n    componentDidCatch() {\r\n        this.setState({\r\n            error:true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        \r\n        return (\r\n            <ItemList \r\n                onItemSelected={(itemId) => {\r\n                    this.props.history.push(itemId)\r\n                }}\r\n                getData={this.gotService.getAllBooks}\r\n                renderItem ={({name}) => name}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(BooksPage);","import React,{Component} from 'react';\r\nimport ItemList from '../itemList';\r\nimport ItemDetails,{Field} from '../itemDetails';\r\nimport ErrorMessage from '../errorMessage';\r\nimport gotService from '../../services/gotService';\r\nimport RowBlock from '../rowBlock';\r\n\r\nexport default class HousesPage extends Component {\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        selectedHouse:null,\r\n        error:false\r\n    }\r\n    \r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedHouse: id\r\n        })\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error:true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        const itemList = (\r\n            <ItemList \r\n            onItemSelected={this.onItemSelected}\r\n            getData={this.gotService.getAllHouses}\r\n            renderItem ={({name}) => name}/>\r\n        )\r\n\r\n        const itemDetails = (\r\n            <ItemDetails \r\n            itemId={this.state.selectedHouse}\r\n            getData={this.gotService.getHouse}> \r\n                <Field field='region' label='Region'/>\r\n                <Field field='words' label='Words'/>\r\n                <Field field='titles' label='Titles'/>\r\n                <Field field='ancestralWeapons' label='Ancestral Weapons'/>\r\n            </ItemDetails>\r\n        )\r\n        \r\n        return (\r\n            <RowBlock left = {itemList} right={itemDetails}/>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport ItemDetails,{Field} from '../itemDetails';\r\nimport gotService from '../../services/gotService';\r\n\r\n\r\nexport default class BooksItem extends Component {\r\n    gotService = new gotService();\r\n\r\n    render() {\r\n        return (\r\n            <ItemDetails \r\n            itemId={this.props.bookId}\r\n            getData={this.gotService.getBook}> \r\n                <Field field='numberOfPages' label='Number of pages'/>\r\n                <Field field='publisher' label='Publisher'/>\r\n                <Field field='released' label='Released'/>\r\n            </ItemDetails>  \r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Col,Row,Container} from 'reactstrap';\r\nimport Header from '../header';\r\nimport RandomChar from '../randomChar';\r\nimport ErrorMessage from '../errorMessage';\r\nimport {CharacterPage,BooksPage,HousesPage,BooksItem} from '../pages';\r\nimport gotService from '../../services/gotService';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        showRandomChar:true,\r\n        error:false\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState ({\r\n            error:true\r\n        })\r\n    }\r\n\r\n    toggleRandomChar = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                showRandomChar: !state.showRandomChar\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const char = this.state.showRandomChar ? <RandomChar/> : null;\r\n\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return (\r\n           <Router>\r\n            <div className='app'>\r\n                <Container>\r\n                    <Header/>\r\n                </Container>\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={{size:5, offset:0}}>\r\n                            <button\r\n                            className=\"toggle-btn\"\r\n                            onClick={this.toggleRandomChar}>\r\n                                Hide/Show\r\n                            </button>\r\n                            {char}\r\n                        </Col>\r\n                    </Row>\r\n                    <Route path='/characters' component={CharacterPage}/>\r\n                    <Route path='/houses' component={HousesPage}/>\r\n                    <Route path='/books' exact component={BooksPage}/>\r\n                    <Route path='/books/:id' render={\r\n                        ({match}) =>  {\r\n                            const {id} = match.params;\r\n                         return <BooksItem bookId={id}/>}\r\n                    }/>\r\n                </Container>\r\n            </div>\r\n           </Router>\r\n        );\r\n    }   \r\n};\r\n\r\n","import App from './app';\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app';\n\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}